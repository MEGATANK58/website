---
import Navbar from "../components/Navbar.astro";
import Canvas from "@napi-rs/canvas";

const repos = `https://api.github.com/users/megatank58/repos`;
const profile = "https://www.megatank58.tech/invertedlogo.png";

const projects = (await (await fetch(repos)).json())
  .sort((x, y) => {
    return (
      Date.now() -
      new Date(x.updated_at).getTime() -
      (Date.now() - new Date(y.updated_at).getTime())
    );
  })
  .filter((project) => {
    return (
      project.description &&
      project.full_name.toLowerCase() !== "megatank58/megatank58"
    );
  })
  .map((project) => {
    return {
      name: project.name,
      description: project.description,
      contributions: project.contributions,
    };
  });

for (let i = 0; i < projects.length; i++) {
  let repo = projects[i].name;

  let html = await (
    await fetch(`https://github.com/megatank58/${repo}`)
  ).text();

  const ogImageRegExp = /<meta property="og:image" content="(.*?)"/i;
  const match = ogImageRegExp.exec(html);
  let ogImage = match ? match[1] : null;

  if (ogImage.includes("opengraph.githubassets.com")) {
    const canvas = Canvas.createCanvas(1200, 600);
    const context = canvas.getContext("2d");

    context.drawImage(await Canvas.loadImage(ogImage), 0, 0);

    let img = context.createImageData(200, 200);
    for (let i = img.data.length; --i >= 0; ) img.data[i] = 2500;
    context.putImageData(img, 900, 100);

    context.drawImage(await Canvas.loadImage(profile), 750, 20);

    ogImage = canvas.toDataURL();
  }

  projects[i].image = ogImage;
}
---

<Navbar />
<div class="flex items-center justify-center my-4">
  <div class="mx-auto flex items-center text-base-content">
    <div class="font-bold text-2xl">Repositories</div><svg
      xmlns="http://www.w3.org/2000/svg"
      width="32"
      height="32"
      viewBox="0 0 24 24"
      ><g
        fill="none"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-width="1.5"
        ><path d="M4 19V5a2 2 0 0 1 2-2h13.4a.6.6 0 0 1 .6.6v13.114"
        ></path><path stroke-linejoin="round" d="M15 17v5l2.5-1.6L20 22v-5"
        ></path><path d="M6 17h14"></path><path
          stroke-linejoin="round"
          d="M6 17a2 2 0 1 0 0 4h5.5"></path></g
      ></svg
    >
  </div>
</div>
<div class="grid grid-cols-3">
  {
    projects.map((project) => (
      <div class="m-4">
        <a href={"/projects/" + project.name}>
          <div class="card bg-base-300 hover:shadow-md">
            <figure>
              <img
                id={project.name}
                src={project.image}
                alt={project.name}
                class="invert"
                crossorigin="anonymous"
              />
            </figure>
            <div class="card-body">
              <h2 class="card-title">
                <span class="font-extralight">
                  megatank58/<span class="font-bold">{project.name}</span>
                </span>
              </h2>
              <p>{project.description}</p>
            </div>
          </div>
        </a>
      </div>
    ))
  }
</div>
